{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\OneDrive\\\\Desktop\\\\varsha_ws\\\\women_safety_dashboard\\\\frontend\\\\src\\\\components\\\\RiskMapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RiskMapPage = () => {\n  _s();\n  const [crimeData, setCrimeData] = useState([]);\n  useEffect(() => {\n    axios.post(\"http://127.0.0.1:8000/api/all-crime-data/\").then(response => {\n      setCrimeData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching crime data:\", error);\n    });\n  }, []);\n\n  // Function to determine circle color based on risk level\n  const getColor = riskLevel => {\n    if (riskLevel === \"High\") return \"red\";\n    if (riskLevel === \"Medium\") return \"orange\";\n    return \"green\"; // Low risk\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crime Risk Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [43.7, -79.4],\n      zoom: 12,\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), crimeData.map((crime, index) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: [crime.latitude, crime.longitude],\n        radius: 10,\n        color: getColor(crime.risk_level),\n        fillOpacity: 0.5,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Risk Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), \" \", crime.risk_level, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), \" \", crime.Neighbourhood]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(RiskMapPage, \"tQikb6sGcEiRUGL1usKgdvOpJsI=\");\n_c = RiskMapPage;\nexport default RiskMapPage;\nvar _c;\n$RefreshReg$(_c, \"RiskMapPage\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","CircleMarker","Popup","axios","jsxDEV","_jsxDEV","RiskMapPage","_s","crimeData","setCrimeData","post","then","response","data","catch","error","console","getColor","riskLevel","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","map","crime","index","latitude","longitude","radius","color","risk_level","fillOpacity","Neighbourhood","_c","$RefreshReg$"],"sources":["C:/Users/srini/OneDrive/Desktop/varsha_ws/women_safety_dashboard/frontend/src/components/RiskMapPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\n\r\nconst RiskMapPage = () => {\r\n  const [crimeData, setCrimeData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.post(\"http://127.0.0.1:8000/api/all-crime-data/\")\r\n      .then((response) => {\r\n        setCrimeData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching crime data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Function to determine circle color based on risk level\r\n  const getColor = (riskLevel) => {\r\n    if (riskLevel === \"High\") return \"red\";\r\n    if (riskLevel === \"Medium\") return \"orange\";\r\n    return \"green\"; // Low risk\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Crime Risk Map</h1>\r\n      <MapContainer center={[43.7, -79.4]} zoom={12} style={{ height: \"500px\", width: \"100%\" }}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n\r\n        {crimeData.map((crime, index) => (\r\n          <CircleMarker\r\n            key={index}\r\n            center={[crime.latitude, crime.longitude]}\r\n            radius={10}\r\n            color={getColor(crime.risk_level)}\r\n            fillOpacity={0.5}\r\n          >\r\n            <Popup>\r\n              <strong>Risk Level:</strong> {crime.risk_level}\r\n              <br />\r\n              <strong>Location:</strong> {crime.Neighbourhood}\r\n            </Popup>\r\n          </CircleMarker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RiskMapPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,KAAK,QAAQ,eAAe;AAC5E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdM,KAAK,CAACO,IAAI,CAAC,2CAA2C,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,QAAQ,GAAIC,SAAS,IAAK;IAC9B,IAAIA,SAAS,KAAK,MAAM,EAAE,OAAO,KAAK;IACtC,IAAIA,SAAS,KAAK,QAAQ,EAAE,OAAO,QAAQ;IAC3C,OAAO,OAAO,CAAC,CAAC;EAClB,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA,CAACN,YAAY;MAACyB,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAT,QAAA,gBACvFd,OAAA,CAACL,SAAS;QACR6B,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAyF;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG,CAAC,EAEDf,SAAS,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1B5B,OAAA,CAACJ,YAAY;QAEXuB,MAAM,EAAE,CAACQ,KAAK,CAACE,QAAQ,EAAEF,KAAK,CAACG,SAAS,CAAE;QAC1CC,MAAM,EAAE,EAAG;QACXC,KAAK,EAAEpB,QAAQ,CAACe,KAAK,CAACM,UAAU,CAAE;QAClCC,WAAW,EAAE,GAAI;QAAApB,QAAA,eAEjBd,OAAA,CAACH,KAAK;UAAAiB,QAAA,gBACJd,OAAA;YAAAc,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACS,KAAK,CAACM,UAAU,eAC9CjC,OAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNlB,OAAA;YAAAc,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACS,KAAK,CAACQ,aAAa;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC,GAVHU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWE,CACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/CID,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}